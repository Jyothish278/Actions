name: Migrate Environment Secrets and Variables

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: self-hosted
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          
      - name: Check Python and pip versions
        run: |
          python --version
          pip --version
          
      - name: Create and activate virtual environment
        run: |
          python -m venv venv
          source venv/bin/activate
          
      - name: Install Python packages
        run: |
          source venv/bin/activate
          pip install --upgrade pip
          pip install pynacl

      - name: Get Secrets from Source Environment
        id: get-secrets
        run: |
          source_env="${{ vars.SOURCE_ENV }}"
          owner="${{ vars.OWNER }}"
          repo="${{ vars.REPO }}"
          secrets_url="https://api.github.com/repos/$owner/$repo/environments/$source_env/secrets"
          page=1
          total_secrets=0

          while : ; do
            response=$(curl -s -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              "$secrets_url?per_page=100&page=$page")

            secrets_count=$(echo "$response" | jq -r '.total_count')
            total_secrets=$((total_secrets + secrets_count))
            echo "$response" | jq -r '.secrets[] | .name' >> secrets.env

            # Break if there are no more secrets
            if [[ "$secrets_count" -lt 100 ]]; then
              break
            fi
            page=$((page + 1))
          done

          echo "Total secrets fetched: $total_secrets"

      - name: Create Secrets in Destination Environment
        run: |
          source venv/bin/activate
          dest_env="${{ vars.DEST_ENV }}"
          owner="${{ vars.OWNER }}"
          repo="${{ vars.REPO }}"

          # Get the public key for the destination environment
          key_info=$(curl -s -L \
            -X GET \
            -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            "https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/public-key")

          key_id=$(echo "$key_info" | jq -r '.key_id')
          public_key=$(echo "$key_info" | jq -r '.key')

          # Read the secret names from the file created in the previous step
          while IFS= read -r secret_name; do
            # Use the secret name as the placeholder value
            placeholder_value="$secret_name"

            # Encrypt the placeholder value using the public key
            encrypted_value=$(python3 encrypt_secret.py "$public_key" "$placeholder_value")

            # Log the details before creating the secret
            echo "Creating secret with:"
            echo "  Secret Name: $secret_name"
            echo "  Create URL: https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/$secret_name"

            # Create the secret in the destination environment
            create_secret_url="https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/$secret_name"
            create_response=$(curl -s -L -X PUT \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -d "{\"encrypted_value\":\"$encrypted_value\",\"key_id\":\"$key_id\"}" \
              "$create_secret_url")

            echo "Successfully created secret '$secret_name'"

          done < secrets.env

      - name: Get Variables from Source Environment
        id: get-vars
        run: |
          source_env="${{ vars.SOURCE_ENV }}"
          owner="${{ vars.OWNER }}"
          repo="${{ vars.REPO }}"
          vars_url="https://api.github.com/repos/$owner/$repo/environments/$source_env/variables"
          page=1
          total_vars=0

          while : ; do
            response=$(curl -s -L \
              -H "Accept: application/vnd.github+json" \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              "$vars_url?per_page=100&page=$page")

            vars_count=$(echo "$response" | jq -r '.total_count')
            total_vars=$((total_vars + vars_count))
            echo "$response" | jq -r '.variables[] | "\(.name)=\(.value)"' >> vars.env

            # Break if there are no more variables
            if [[ "$vars_count" -lt 100 ]]; then
              break
            fi
            page=$((page + 1))
          done

          echo "Total variables fetched: $total_vars"

      - name: Create Variables in Destination Environment
        run: |
          dest_env="${{ vars.DEST_ENV }}"
          owner="${{ vars.OWNER }}"
          repo="${{ vars.REPO }}"

          while IFS='=' read -r var_name var_value; do
            create_var_url="https://api.github.com/repos/$owner/$repo/environments/$dest_env/variables"
            create_response=$(curl -s -L -X POST \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "{\"name\":\"$var_name\",\"value\":\"$var_value\"}" \
              "$create_var_url")

            echo "Successfully created variable '$var_name'"
          done < vars.env
