name: Migrate Environment Secrets and Variables

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: ubuntu-latest
    steps:
      - name: Get Secrets from Source Environment
        id: get-secrets
        run: |
          source_env="test-env"
          owner="Jyothish278"
          repo="Actions"
          response=$(curl -L \
                       -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
                       -H "Accept: application/vnd.github+json" \
                       -H "X-GitHub-Api-Version: 2022-11-28" \
                       "https://api.github.com/repos/$owner/$repo/environments/$source_env/secrets")

          echo "$response" | jq -r '.secrets[] | "\(.name)=\(.value)"' > secrets.env

      - name: Create Secrets in Destination Environment
        run: |
          dest_env="pilot-env"
          owner="Jyothish278"
          repo="Actions"
          
          while IFS='=' read -r name value; do
            # Get the public key for the destination environment
            key_info=$(curl -L \
              -X GET \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/public-key")
            
            key_id=$(echo "$key_info" | jq -r '.key_id')
            public_key=$(echo "$key_info" | jq -r '.key')

            # Write a Node.js script to handle the encryption
            echo "const sodium = require('libsodium-wrappers');" > encrypt.js
            echo "sodium.ready.then(() => {" >> encrypt.js
            echo "  const publicKey = sodium.from_base64('$public_key');" >> encrypt.js
            echo "  const value = '$value';" >> encrypt.js
            echo "  const encrypted = sodium.crypto_box_seal(value, publicKey);" >> encrypt.js
            echo "  console.log(sodium.to_base64(encrypted));" >> encrypt.js
            echo "});" >> encrypt.js

            # Run the Node.js script
            encrypted_value=$(node encrypt.js)

            # Create the secret in the destination environment
            curl -L -X PUT \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "{\"encrypted_value\":\"$encrypted_value\",\"key_id\":\"$key_id\"}" \
              "https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/$name"
          done < secrets.env

      - name: Get Variables from Source Environment
        id: get-vars
        run: |
          source_env="test-env"
          owner="Jyothish278"
          repo="Actions"
          response=$(curl -L \
                       -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
                       -H "Accept: application/vnd.github+json" \
                       -H "X-GitHub-Api-Version: 2022-11-28" \
                       "https://api.github.com/repos/$owner/$repo/environments/$source_env/variables")

          echo "$response" | jq -r '.variables[] | "\(.name)=\(.value)"' > vars.env

      - name: Create Variables in Destination Environment
        run: |
          dest_env="pilot-env"
          owner="Jyothish278"
          repo="Actions"
          while IFS='=' read -r name value; do
            # Create the variable in the destination environment
            curl -L -X PUT \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$owner/$repo/environments/$dest_env/variables/$name"
          done < vars.env
