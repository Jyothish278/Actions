name: Migrate Environment Secrets and Variables

on:
  workflow_dispatch:

jobs:
  migrate:
    runs-on: self-hosted
    steps:
      - name: Create Secrets in Destination Environment
        run: |
          dest_env="pilot-env"
          owner="Jyothish278"
          repo="Actions"
          
          # Define your secrets here
          secret1="${{ secrets.TEST1 }}"
          secret2="${{ secrets.TEST2 }}"

          # Create an array of secrets
          declare -A secrets_map=(
            ["TEST1"]="$secret1"
            ["TEST2"]="$secret2"
          )

          for secret in "${!secrets_map[@]}"; do
            secret_value="${secrets_map[$secret]}"

            if [[ -z "$secret_value" ]]; then
              echo "Secret '$secret' not found."
              continue
            fi

            # Get the public key for the destination environment
            key_info=$(curl -s -L \
              -X GET \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              "https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/public-key")

            key_id=$(echo "$key_info" | jq -r '.key_id')
            public_key=$(echo "$key_info" | jq -r '.key')

            # Encrypt the value using the public key
            encrypted_value=$(echo -n "$secret_value" | openssl pkeyutl -encrypt -pubin -inkey <(echo "$public_key" | base64 --decode) | base64)

            # Create the secret in the destination environment
            create_secret_url="https://api.github.com/repos/$owner/$repo/environments/$dest_env/secrets/$secret"
            create_response=$(curl -s -L -X PUT \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "{\"encrypted_value\":\"$encrypted_value\",\"key_id\":\"$key_id\"}" \
              "$create_secret_url")

            # Check for potential errors
            if [ $? -ne 0 ]; then
              echo "Error creating secret '$secret': $create_response"
              exit 1
            fi

            echo "Successfully created secret '$secret'"
          done

      - name: Create Variables in Destination Environment
        run: |
          dest_env="pilot-env"
          owner="Jyothish278"
          repo="Actions"

          # Define your variables here
          var1="${{ vars.TEST3 }}"
          var2="${{ vars.TEST4 }}"

          # Create an array of variables
          declare -A vars_map=(
            ["TEST3"]="$var1"
            ["TEST4"]="$var2"
          )

          for var in "${!vars_map[@]}"; do
            var_value="${vars_map[$var]}"

            if [[ -z "$var_value" ]]; then
              echo "Variable '$var' not found."
              continue
            fi

            create_var_url="https://api.github.com/repos/$owner/$repo/environments/$dest_env/variables/$var"
            create_response=$(curl -s -L -X PUT \
              -H "Authorization: Bearer ${{ secrets.PERSONAL_ACCESS_TOKEN }}" \
              -H "Accept: application/vnd.github+json" \
              -H "X-GitHub-Api-Version: 2022-11-28" \
              -d "{\"value\":\"$var_value\"}" \
              "$create_var_url")

            # Check for potential errors
            if [ $? -ne 0 ]; then
              echo "Error creating variable '$var': $create_response"
              exit 1
            fi

            echo "Successfully created variable '$var'"
          done
